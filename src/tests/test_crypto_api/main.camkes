/**
 * Copyright (C) 2019, Hensoldt Cyber GmbH
 */
import <std_connector.camkes>;

import "components/TEST_CRYPTO/TEST_CRYPTO.camkes";
import "components/CRYPTO/CRYPTO.camkes";
import "components/ChanMux/ChanMux.camkes";
import "components/Uart/Uart.camkes";

assembly {
    composition {
        component   TEST_CRYPTO         test_crypto;
        component   CRYPTO              crypto;
        component   ChanMux             chanMux;
        component   UartDev             uartDev;
        component   UartDrv             uartDrv;

        connection  seL4RPCCall         main_chanmux        (from test_crypto.ChanMuxRpc, to chanMux.ChanMuxIn);
        connection  seL4RPCCall         chanmux_uart        (from chanMux.Output, to uartDrv.UartDrv);
        connection  seL4RPCCall         uart_chanmux        (from uartDrv.Output, to chanMux.ChanMuxOut);

        connection  seL4SharedData      uart_dataConnection (from chanMux.outputDataPort, to uartDrv.inputDataPort);
        connection  seL4SharedData      dataConnection      (from test_crypto.chanMuxDataPort, to chanMux.mainDataPort);

        connection  seL4Notification    dataAvailableLan    (from chanMux.dataAvailableMain, to test_crypto.ChanMuxSignal_dataAvailable);

        connection  seL4HardwareMMIO    uart_memio          (from uartDrv.uartRegBase, to uartDev.uartRegBase);

        connection seL4SharedData       cryptoData      (from test_crypto.cryptoClientDataport, to crypto.serverDataport);
        connection seL4RPCCall          cryptoRpc       (from test_crypto.Crypto, to crypto.Crypto);
        connection seL4RPCCall          seosCryptoRpc   (from test_crypto.SeosCryptoRpc, to crypto.SeosCryptoRpc);
    }
    configuration {
        uartDev.uartRegBase_paddr  = 0xE0000000;
        uartDev.uartRegBase_size   = 0x1000;

        uartDrv.inputDataPort       = "R";
    }
}

