name: CI Tests RPI3 Hardware

on:
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read

concurrency:
  group: ci-rpi3-hw
  #cancel-in-progress: true # Do we want this? this would cause current tests to be stopped if a new ci request is launched.
  # Waiting till the current run is done is probably the better solution

env:
  BUILD_PLAT: "rpi3"
  TEST_PLAT: "rpi3-ci"
  PLAT_IP: "10.178.169.40"
  GATEWAY_IP: "10.178.169.33"
  RUNNER_IP: "10.70.192.3" # TODO: Implement this not static  
  BUILD_CMD: trentos/sdk/scripts/open_trentos_build_env.sh -d "-e BUILD_PLATFORM=rpi3" trentos/build.sh
  TEST_CMD: trentos/sdk/scripts/open_trentos_test_env.sh -d "-e BUILD_PLATFORM=rpi3-ci" trentos/build.sh

jobs:
  #check_label:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Check if label is applied
  #      id: label-check
  #      run: |
  #        if [[ $(jq -r '.action' "$GITHUB_EVENT_PATH") == "labeled" && $(jq -r '.label.name' "$GITHUB_EVENT_PATH") == "Run-CI" ]]; then
  #          echo "Label 'Run-CI' applied. Running workflow steps."
  #        else
  #          echo "Label 'Run-CI' not applied. Exiting workflow without running steps."
  #          exit 78  # Exit with a neutral status to mark the check as pending
  #        fi
  #    - name: Checkout repository
  #      uses: actions/checkout@v2

  # THIS IS A DUMMY DO NOT USE IN PRODUCTION!!!
  check_label:
    runs-on: ubuntu-latest
    steps:
      - name: Dummy
        id: label-check
        run: echo "dummy"
    
  demos_and_tests:
    runs-on: self-hosted
    needs: check_label
    steps:
      # preparation
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ORG_CLONE_PRV_SUBM }}
          submodules: 'recursive'
          path: 'trentos'
      - name: Test prepare
        run: ${{ env.BUILD_CMD }} test-prepare
        working-directory: ${{ github.workspace }}

      # tested: reliable
      - name: demo_hello_world
        uses: TRENT-OS/trentos/.github/workflows/demo_hello_world_hw.yml@actions-hw-ci
        with:
          BUILD_PLAT: ${{ env.BUILD_PLAT }}
          TEST_PLAT: ${{ env.TEST_PLAT }}

      # tested: reliable
      - name: test_certparser
        if: ${{ always() && steps.check_label.result == 'success' }}
        uses: TRENT-OS/trentos/.github/workflows/test_certparser_hw.yml@actions-hw-ci
        with:
          BUILD_PLAT: ${{ env.BUILD_PLAT }}
          TEST_PLAT: ${{ env.TEST_PLAT }}

      # tested: fails (log output is messed up and strings cant be found. Test runs fine)
      # reason: Test fails du to multiple components simulatnously writing on the output uart.
      # the different messages interrupt each other and the string matchin doesnt work because of     this.
      #- name: test_certserver
      #  if: ${{ always() && needs.check_label.result == 'success' }}
      #  uses: TRENT-OS/trentos/.github/workflows/test_certserver_hw.yml@actions-hw-ci
      #  with:
      #    BUILD_PLAT: ${{ env.BUILD_PLAT }}
      #    TEST_PLAT: ${{ env.TEST_PLAT }}

      #tested: fails (test completes fine, but output seems to be messed up)
      # test takes forever to fail
      #- name: test_config_server
      #  if: ${{ always() && needs.check_label.result == 'success' }}
      #  uses: TRENT-OS/trentos/.github/workflows/test_config_server_hw.yml@actions-hw-ci
      #  with:
      #    BUILD_PLAT: ${{ env.BUILD_PLAT }}
      #    TEST_PLAT: ${{ env.TEST_PLAT }}

      #tested: unreliable (most tests pass, a random few dont(amount and which tests is random))
      # in most cases some random tests fail due to inability to find success log string
      - name: test_crypto_api
        if: ${{ always() && needs.check_label.result == 'success' }}
        uses: TRENT-OS/trentos/.github/workflows/test_crypto_api_hw.yml@actions-hw-ci
        with:
          BUILD_PLAT: ${{ env.BUILD_PLAT }}
          TEST_PLAT: ${{ env.TEST_PLAT }}

      #tested: reliable
      - name: test_cryptoserver
        if: ${{ always() && needs.check_label.result == 'success' }}
        uses: TRENT-OS/trentos/.github/workflows/test_cryptoserver_hw.yml@actions-hw-ci
        with:
          BUILD_PLAT: ${{ env.BUILD_PLAT }}
          TEST_PLAT: ${{ env.TEST_PLAT }}

      # tested: reliable
      - name: test_entropysource
        if: ${{ always() && needs.check_label.result == 'success' }}
        uses: TRENT-OS/trentos/.github/workflows/test_entropysource_hw.yml@actions-hw-ci
        with:
          BUILD_PLAT: ${{ env.BUILD_PLAT }}
          TEST_PLAT: ${{ env.TEST_PLAT }}

      # tested: reliable
      - name: test_filesystem
        if: ${{ always() && needs.check_label.result == 'success' }}
        uses: TRENT-OS/trentos/.github/workflows/test_filesystem_hw.yml@actions-hw-ci
        with:
          BUILD_PLAT: ${{ env.BUILD_PLAT }}
          TEST_PLAT: ${{ env.TEST_PLAT }}

      # tested: reliable
      - name: test_keystore
        if: ${{ always() && needs.check_label.result == 'success' }}
        uses: TRENT-OS/trentos/.github/workflows/test_keystore_hw.yml@actions-hw-ci
        with:
          BUILD_PLAT: ${{ env.BUILD_PLAT }}
          TEST_PLAT: ${{ env.TEST_PLAT }}

      # tested: failsnvidia
      # seems like some strings are not found
      # some match statements seem to fail these look a bit strange
      #- name: test_logserver
      #  if: ${{ always() && needs.check_label.result == 'success' }}
      #  uses: TRENT-OS/trentos/.github/workflows/test_logserver_hw.yml@actions-hw-ci
      #  with:
      #    BUILD_PLAT: ${{ env.BUILD_PLAT }}
      #    TEST_PLAT: ${{ env.TEST_PLAT }}
  
      #tested: ? THIS NEEDS WORK and probably needs to be split into multiple tests
      # tested: tcp_server: unreliable Most tests pass, 3 consistently fail - these are disabled for now should be investigated after switch to picotcp-ng
      - name: test_network_api
        if: ${{ always() && needs.check_label.result == 'success' }}
        uses: TRENT-OS/trentos/.github/workflows/test_network_api_hw.yml@actions-hw-ci
        with:
          BUILD_PLAT: ${{ env.BUILD_PLAT }}
          TEST_PLAT: ${{ env.TEST_PLAT }}
          PLAT_IP: ${{ needs.check_label.outputs.PLAT_IP }}
          GATEWAY_IP: ${{ needs.check_label.outputs.GATEWAY_IP }}
          RUNNER_IP: ${{ needs.check_label.outputs.RUNNER_IP }}

      # tested: fails
      # normal log rambling as well as some non supported stuff such as chanmux tests, needs more     digging
      #test_storage_interface:
      #  needs: test_logserver
      #  if: ${{ always() && needs.check_label.result == 'success' }}
      #  uses: TRENT-OS/trentos/.github/workflows/test_storage_interface_hw.yml@actions-hw-ci
      #  with:
      #    BUILD_PLAT: ${{ env.BUILD_PLAT }}
      #    TEST_PLAT: ${{ env.TEST_PLAT }}

      # tested: reliable
      - name: test_timeserver
        if: ${{ always() && needs.check_label.result == 'success' }}
        uses: TRENT-OS/trentos/.github/workflows/test_timeserver_hw.yml@actions-hw-ci
        with:
          BUILD_PLAT: ${{ env.BUILD_PLAT }}
          TEST_PLAT: ${{ env.TEST_PLAT }}

      # tested: DOES NOT COMPILE DUE TO NOT MERGED PICOTCP-NG (this is an setup issue of my seos-tests)
      #- name: test_tls_api
      #  if: ${{ always() && needs.check_label.result == 'success' }}
      #  uses: TRENT-OS/trentos/.github/workflows/test_tls_api_hw.yml@actions-hw-ci
      #  with:
      #    BUILD_PLAT: ${{ env.BUILD_PLAT }}
      #    TEST_PLAT: ${{ env.TEST_PLAT }}

      # tested: DOES NOT COMPILE DUE TO NOT MERGED PICOTCP-NG (this is an setup issue of my seos-tests)
      #- name: test_tlsserver
      #  if: ${{ always() && needs.check_label.result == 'success' }}
      #  uses: TRENT-OS/trentos/.github/workflows/test_tlsserver_hw.yml@actions-hw-ci
      #  with:
      #    BUILD_PLAT: ${{ env.BUILD_PLAT }}
      #    TEST_PLAT: ${{ env.TEST_PLAT }}


      #
      # TEST UART -> I am not sure how this should be implemented and if this is something we will do
      #
